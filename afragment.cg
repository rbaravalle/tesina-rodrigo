#define CANT 3

float4 main(
        float2 coord0  : TEXCOORD0,
        float2 coord1  : TEXCOORD1,
        float2 coord2  : TEXCOORD2,
        float2 coord3  : TEXCOORD3,

        uniform float usa[CANT],
        uniform float amplitud[CANT],
        uniform float turb[CANT],
        uniform float escala_u[CANT],
        uniform float intensidad[CANT],

        uniform sampler2D textura0,
        uniform sampler2D textura1,
        uniform sampler2D textura2
	
	): COLOR 
{

    float noise = tex2D(textura0, coord3);
	
    float4 color;

    float turbulencia0 = turb[0] * noise;
    float turbulencia1 = turb[1] * noise;
    float turbulencia2 = turb[2] * noise;

    float2 c0 = coord0 + float2(turbulencia0,0);
    float2 c1 = coord1 + float2(turbulencia1,0);
    float2 c2 = coord2 + float2(turbulencia2,0);

    // la turbulencia no depende de la escala
    float b1 = (sin(escala_u[0]*c0.x)+1)/2;
    float b2 = (sin(escala_u[1]*c1.x)+1)/2;
    float b3 = (sin(escala_u[2]*c2.x)+1)/2;

    float t1 = intensidad[0]*pow(b1,amplitud[0]);
    float t2 = intensidad[1]*pow(b2,amplitud[1]);
    float t3 = intensidad[2]*pow(b3,amplitud[2]);

    b1 = usa[0] == 1 ? t1 : 0;

    b2 = (usa[1] == 1 ? (usa[0] == 1 ?
                        lerp(t2,b1,0.5) : t2) : b1);

    b3 = (usa[2] == 1 ? (usa[1] == 1 || usa[0] == 1 ?
                        lerp(t3,b2,0.5) : t3) : b2);

    color.xyz = saturate(b3);

    color.a = 1;

    return color;
}


